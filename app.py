
import streamlit as st
import pandas as pd
from io import BytesIO
from urllib.parse import quote

# Mapeamento de colunas alternativas
colunas_aceitas = {
    "propriet√°rio": "nome",
    "nome": "nome",
    "celular/telefone": "telefone",
    "telefone": "telefone",
    "endere√ßo": "endereco",
    "endereco": "endereco",
    "n√∫mero": "numero",
    "numero": "numero",
    "apto": "apto",
    "valor_venda": "venda",
    "venda": "venda",
    "valor_condom√≠nio": "cond",
    "r_condom": "cond",
    "cond": "cond",
    "valor_iptu": "iptu",
    "iptu": "iptu"
}

# Gerar link WhatsApp
def gerar_link_whatsapp(row):
    nome = str(row.get("nome", "") or "")
    telefone = str(row.get("telefone", "") or "")
    endereco = str(row.get("endereco", "") or "")
    numero = str(row.get("numero", "") or "")
    apto = str(row.get("apto", "") or "")
    venda = str(row.get("venda", "") or "")
    cond = str(row.get("cond", "") or "")
    iptu = str(row.get("iptu", "") or "")

    msg = f"Ol√° {nome}, tudo bem?%0a%0aSou o corretor Helton da ImoveisH (www.imoveish.com.br).%0a%0aVerificamos que voc√™ possui um im√≥vel cadastrado com as seguintes informa√ß√µes:%0aüìç Endere√ßo: {endereco}, n¬∫ {numero}, apto {apto}%0aüí∞ Valor de venda: R$ {venda}%0aüè¢ Condom√≠nio: R$ {cond}%0aüìÑ IPTU: R$ {iptu}%0a%0aGostaria de confirmar se este im√≥vel ainda est√° dispon√≠vel para venda e se os valores acima est√£o atualizados.%0a%0aAgrade√ßo desde j√° pela aten√ß√£o."
    return f"https://wa.me/55{telefone}?text={quote(msg)}"

# Padronizar colunas
def padronizar_colunas(df):
    colunas_novas = {}
    for col in df.columns:
        key = col.strip().lower()
        key = key.replace("√£", "a").replace("√°", "a").replace("√©", "e").replace("√™", "e").replace("√≠", "i").replace("√¥", "o").replace("√≥", "o").replace("√∫", "u").replace("/", "_")
        if key in colunas_aceitas:
            colunas_novas[col] = colunas_aceitas[key]
    df = df.rename(columns=colunas_novas)
    return df

# Login
def login():
    st.title("Painel Im√≥veisH - Login")
    user = st.text_input("Usu√°rio")
    password = st.text_input("Senha", type="password")
    if st.button("Entrar"):
        if user == "helton1985" and password == "Indira1986@":
            st.session_state["logado"] = True
        else:
            st.error("Usu√°rio ou senha inv√°lidos.")

# Painel
def painel():
    st.title("Painel Im√≥veisH - Valida√ß√£o de Im√≥veis via Excel")
    uploaded_file = st.file_uploader("üì§ Fa√ßa upload da planilha (.xlsx)", type=["xlsx"])

    if uploaded_file:
        try:
            df = pd.read_excel(uploaded_file)
            df = padronizar_colunas(df)
            obrigatorias = ["nome", "telefone", "endereco", "numero", "apto", "venda", "cond", "iptu"]
            for col in obrigatorias:
                if col not in df.columns:
                    df[col] = ""
            st.success(f"{len(df)} im√≥veis carregados com sucesso!")
            for _, row in df.iterrows():
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.markdown(f"**{row.get('nome', '')}** - {row.get('endereco', '')}, n¬∫ {row.get('numero', '')}, apto {row.get('apto', '')}")
                with col2:
                    url = gerar_link_whatsapp(row)
                    st.link_button("Enviar WhatsApp", url, use_container_width=True)
        except Exception as e:
            st.error("Erro ao processar o arquivo. Verifique se a planilha est√° no formato correto.")

# Execu√ß√£o
if "logado" not in st.session_state:
    login()
else:
    painel()
